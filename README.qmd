---
format: gfm
---


```{r}
#| label: setup
#| echo: false
#| results: "hide"
#| warning: false
#| message: false
# Load some libraries
library("knitr")
library("RefManageR")
library("tidyverse")
library("here")
library("patchwork")
library("scholar")
library("textutils")

# Plotting options
opts_chunk$set(
  out.width = "100%", 
  dpi = 300, 
  fig.asp = .56, 
  fig.retina = 2
)

my_theme <- function() {
  theme_minimal() + 
    theme(
      plot.title = element_text(size = rel(1), face = "bold"), 
      plot.subtitle = element_text(size = rel(0.9)),
      plot.caption = element_text(color = "#777777", vjust = 0),
      axis.title = element_text(size = rel(.9), hjust = 0.95, face = "italic"), 
      panel.grid.major = element_line(linewidth = rel(.1), color = "grey70"), 
      panel.grid.minor = element_line(linewidth = rel(.1), color = "grey70")
    )
}

```

# mybib

**Last Updated**: `r sprintf("%s", Sys.time())`  
**License**: Public Domain (CC-0)

Version controlled .bib files for my scholarly work, as well as some light 
analyses and a complete reference list.

This repo now includes two main bib files: 
__publications_html.bib__ and __publications_latex.bib__. 

I call these files in to other projects (e.g., cv, personal website) when I 
want to print a list of references. 

Initial commit is a direct copy of example done by 
[leeper](https://github.com/leeper/references). 

----





Load bibs and generate some useful files and dataframes: 

```{r}
#| label: data
#| message: false
#| warning: false
# Load bib
bib <- suppressWarnings(
  ReadBib(
    here("publications_html.bib"), 
    check = FALSE
  )
)

# Create csv of citekeys
cite_key_list <- bind_cols(
  bib$key |> unlist() |> tibble::enframe(name = NULL), 
  bib$bibtype |> unlist() |> tibble::enframe(name = NULL), 
  bib$year |> unlist() |> tibble::enframe(name = NULL)
  ) |> 
  rename(citekey = value...1, type = value...2, year = value...3) |> 
  write_csv(here("cite_key_list.csv"))

# Set bib options for printing
BibOptions(
  bib.style = "authoryear", 
  style = "text", 
  max.names = 10, 
  first.inits = TRUE, 
  check.entries = FALSE
)

# Convert to dataframe for analyses
dat <- bib |> 
  as_tibble() |> 
  map_df(.f = HTMLdecode) |> 
  mutate(year = as.numeric(year))
```

And now some basic statistics on its contents:


## Citation Types

```{r}
#| label: bibtype
counts <- xtabs(~bibtype, data = bib) |> as_tibble()

counts |> 
  mutate(bibtype = fct_reorder(bibtype, n)) |> 
  ggplot() + 
  aes(x = bibtype, y = n, label = n) + 
  geom_bar(stat = 'identity', color = 'black', fill = 'darkred', width = 0.1) +
  geom_point(pch = 21, size = 10, color = 'black', fill = 'lightgrey') + 
  geom_text() + 
  labs(y = "Count", x = "Citation Type") + 
  coord_flip() + 
  my_theme()
```

## Journals

```{r}
#| label: journal
datj <- aggregate(bibtype ~ journal, data = bib, FUN = length)

dat |> 
  group_by(journal) |> 
  summarize(counts = n(), .groups = "drop") |> 
  na.omit() |> 
  mutate(journal = fct_reorder(journal, counts)) |> 
  ggplot() + 
  aes(x = journal, y = counts, label = counts) + 
  geom_bar(stat = "identity", color = 'black', fill = 'darkred', width = 0.1) +
  geom_point(pch = 21, size = 10, color = 'black', fill = 'lightgrey') + 
  geom_text() + 
  labs(y = "Count", x = "Journal") + 
  coord_flip() + 
  my_theme()
```

## Authors

```{r}
#| label: authors
#| fig-height: 8
# Initialize list
authors <- list()

# For each element in list, get last name of author and store in 
# 'authors' list
for (i in 1:length(bib)) {
  authors[[i]] <- bib[i]$author$family |> unlist()
}

# Convert to tibble and plot
map(authors, HTMLdecode) |> 
  unlist() |>
  enframe() |> 
  group_by(value) |> 
  summarize(counts = n(), .groups = "drop") |> 
  mutate(value = fct_reorder(value, counts)) |> 
  filter(counts >= 2, value != "Casillas") |> 
  ggplot() + 
  aes(x = value, y = counts, label = counts) + 
  geom_bar(stat = "identity", color = 'black', fill = 'darkred', width = 0.1) +
  geom_point(pch = 21, size = 10, color = 'black', fill = 'lightgrey') + 
  geom_text() + 
  labs(y = "Count (>= 2)", x = "Author", 
       title = "Most frequent collaborators") + 
  coord_flip() + 
  my_theme()
```

## Publication Years

```{r}
#| label: year
prod <- dat |> 
  select(year) |> 
  na.omit() |> 
  group_by(year) |> 
  summarize(counts = n(), .groups = "drop") |> 
  ungroup() |> 
  mutate(
    status = case_when(
        year <= 2012               ~ "MA\nStudent", 
        year >  2012 & year < 2016 ~ "PhD\nStudent", 
        year >= 2016 & year < 2022 ~ "Asst.\nProf", 
        year >= 2022               ~ "Assoc.\nProf"
      ),
    status = fct_relevel(status,  c('MA\nStudent', 'PhD\nStudent', 'Asst.\nProf'))
  )

year_max <- max(prod$counts)
year_current <- prod$year |> unique() |> max()

prod |> 
  ggplot() + 
  aes(x = year, y = counts, label = counts) + 
  geom_bar(stat = "identity", color = 'black', fill = 'black', width = 0.1) +
  geom_point(aes(shape = status, fill = status), size = 10, color = 'black') + 
  scale_shape_manual(name = '', values = 21:24) + 
  scale_x_continuous(breaks = seq(2009, year_current, 1)) + 
  geom_text(color = 'white') + 
  scale_fill_brewer(name = '', palette = 'Set1') + 
  labs(y = "Count", x = "Year", 
       title = "Productivity as a function of year and status") + 
  expand_limits(y = c(0, year_max + 5)) + 
  my_theme()
```

# Google scholar data

## H-index stuff

```{r}
#| label: google-scholar
# Include ID
my_id <- "6sd7cVAAAAAJ"
ms_id <- "GnYMTI8AAAAJ"
miguel <- "12mgD38AAAAJ"

ids <- c(my_id, ms_id)
# compare_scholars(ids)
# compare_scholar_careers(ids)

# Get h-index and citation history
predict_h_index <- function(id, journals = NULL) {
    id <- tidy_id(id)

    # Getting the h-index and checking for NA
    h <- get_profile(id)$h_index
    if (is.na(h)) return(NA)

    n <- get_num_articles(id) # number of articles written
    y <- as.numeric(format(Sys.Date(), "%Y")) - get_oldest_article(id)
    j <- get_num_distinct_journals(id)

    # Handle optional journals parameter
    if (is.null(journals)) {
        q <- get_num_top_journals(id)
    } else {
        q <- get_num_top_journals(id, journals)
    }

    # Regression coefficients
    coefs <- c(
        1, 0.760, 0.373, 0.967, -0.069, 0.018, 0.033,
        2, 1.413, 0.781, 0.936, -0.132, 0.018, 0.064,
        3, 2.227, 1.105, 0.903, -0.193, 0.027, 0.096,
        4, 3.196, 1.386, 0.871, -0.274, 0.039, 0.145,
        5, 3.997, 1.578, 0.858, -0.345, 0.063, 0.198,
        6, 4.752, 1.671, 0.817, -0.377, 0.117, 0.282,
        7, 5.741, 1.761, 0.761, -0.420, 0.170, 0.394,
        8, 6.531, 1.796, 0.669, -0.420, 0.252, 0.508,
        9, 7.482, 1.653, 0.561, -0.415, 0.383, 0.629,
        10, 8.734, 1.326, 0.478, -0.411, 0.522, 0.823
    )
    coefs.m <- matrix(coefs, nrow=10, byrow=TRUE)
    coefs <- coefs.m[,-1]
    vals <- c(1, sqrt(n), h, y, j, q)

    # Calculate the h-index predictions
    h.pred <- coefs %*% vals
    h.vals <- c(h, h.pred)

    # Check for sensible values
    standard.warning <- "You're probably not a neuroscientist. Please read the documentation for information on the limitations of this function."
  
    if (any(diff(h.vals) < 0)) {
        warning(paste0("Decreasing h-values predicted. ", standard.warning))
    }

    if (any(h.vals < 0)) {
        warning(paste0("Negative h-values predicted. ", standard.warning))
    }
  
    return(data.frame(years_ahead = 0:10, h_index = h.vals))
}

my_h <- predict_h_index(my_id) |> mutate(author = "jvc")
my_c <- get_citation_history(my_id) |> mutate(author = "jvc")

# Game same info for MS
ms_h <- predict_h_index(ms_id) |> mutate(author = "ms")
ms_c <- get_citation_history(ms_id) |> mutate(author = "ms")

mj_h <- predict_h_index(miguel) |> mutate(author = "miguel")
mj_c <- get_citation_history(miguel) |> mutate(author = "miguel")

```

My current h-index is `r my_h[1, 2]`. 
I don't really know what this means (yet), but I can predict how this will grow 
over the next ten years. 

```{r}
#| label: h-plot
my_h |> 
  ggplot() + 
  aes(x = years_ahead, y = h_index) + 
  geom_hline(yintercept = ms_h[1, 2], lty = 3) + 
  geom_path() + 
  geom_point(pch = 24, fill = "grey90", size = 3) + 
  ylim(0, max(my_h$h_index) + 5) + 
  my_theme()

ms_h |> 
  ggplot() + 
  aes(x = years_ahead, y = h_index) + 
  geom_hline(yintercept = ms_h[1, 2], lty = 3) + 
  geom_path() + 
  geom_point(pch = 24, fill = "grey90", size = 3) + 
  ylim(0, max(mj_h$h_index) + 5) + 
  my_theme()
```

So it looks like I can plan on my h-index improving, but I have no context 
(yet) for what this means. 
I would like to add a few influential people to the plot to see where I 
currently fit in in relation to them. 
This might be a useful metric for setting goals. 

```{r}
#| label: compare-h
# Plot h-index side by side
h_index_1 <- bind_rows(my_h, ms_h, mj_h) |> 
  ggplot() + 
  aes(x = years_ahead, y = h_index, shape = author, color = author) + 
  geom_path() + 
  geom_point(fill = "grey90", size = 3) + 
  scale_color_viridis_d(option = "C", end = 0.4) + 
  scale_shape_manual(values = 21:23) + 
  labs(title = "Comparison of h-index", 
       subtitle = "Predicted h-index values over 10 years.") + 
  my_theme() + 
  theme(legend.position = "inside", legend.position.inside = c(0.15, 0.88))

# Fit a model and plot trajectories
combined_h <- bind_rows(my_h, ms_h) |> 
  pivot_wider(names_from = author, values_from = h_index)
coefs <- lm(ms ~ jvc, data = combined_h) |> coef()

h_index_2 <- combined_h |> 
  ggplot() + 
  aes(x = jvc, y = ms) + 
  geom_abline(intercept = coefs[1], slope = coefs[2], lty = 3) + 
  geom_path() + 
  geom_point(pch = 24, fill = "grey90", size = 3) + 
  my_theme()

h_index_1 + h_index_2
```

So it looks like MS has an overall higher h-index and the function shows us 
as having more or less similar growth over time. 

## Citations

Now I will take a look at my citation history. 

```{r}
#| label: citation-history
my_c |> 
  ggplot() + 
  aes(x = year, y = cites) + 
  geom_path() + 
  geom_point(pch = 24, fill = "grey90", size = 3) + 
  scale_x_continuous(breaks = seq(min(my_c$year), max(my_c$year), 1)) + 
  coord_cartesian(ylim = c(0, 0.9 * sum(my_c$cites))) + 
  labs(y = "Citations", x = "Year") + 
  my_theme()

my_c |> 
  mutate(cum = cumsum(cites)) |> 
  ggplot() + 
  aes(x = year, y = cum) + 
  geom_path() + 
  geom_point(pch = 24, fill = "grey90", size = 3) + 
  scale_x_continuous(breaks = seq(min(my_c$year), max(my_c$year), 1)) + 
  coord_cartesian(ylim = c(0, sum(my_c$cites) + 10)) + 
  labs(y = "Cumulative citations", x = "Year") + 
  my_theme()
```

Note that these are cumulative citations by year. 

Let's plot this in comparison to MS. 

```{r}
#| label: combined-citations
bind_rows(my_c, ms_c, mj_c) |> 
  ggplot() + 
  aes(x = year, y = cites, shape = author, color = author) + 
  geom_path() + 
  geom_point(aes(fill = author), size = 3.5, color = "white", stroke = 1) + 
  scale_shape_manual(name = NULL, values = 21:23) + 
  scale_color_viridis_d(name = NULL, option = "C", end = 0.4) + 
  scale_fill_viridis_d(name = NULL, option = "C", end = 0.4) + 
  scale_x_continuous(breaks = seq(min(ms_c$year), max(my_c$year), 2)) + 
  coord_cartesian(ylim = c(0, max(mj_c$cites) + 20)) + 
  labs(y = "Citations", x = "Year") + 
  my_theme()
```

Both MS and I had bumps in year 5, but they aren't even remotely comparable. 😳

----

# Journals

## Already published or accepted

- Journal of Second Language Studies
- Second Language Research
- Phonetica
- Journal of the Acoustical Society of America
- Journal of Phonetics
- Bilingualism: Language and Cognition
- Language and Speech
- Language Learning
- Studies in SLA
- Spanish in Context
- Languages
- Translation, Cognition & Behavior
- Advances in Methods and Practices in Psychological Science
- Frontiers in Psychology
- Frontiers in Communication
- Applied Psycholinguistics
- Frontiers in Psychology
- Linguistic approaches to bilingualism 

## Submitted

- International Journal of Bilingualism
- Linguistics: An Interdisciplinary Journal of the Language Sciences

## In prep

- JASA

## On deck

- Journal of Second Language Pronunciation


## Wishlist

- Heritage Language Journal
- Laboratory phonology

----

# My references (testing)

## Articles

```{r}
#| label: my-ref
#| warning: false
#| results: 'asis'
#| echo: true

# Printer function for refs
ref_printer <- function(pubs) {
  
  for (i in pubs) {
    print(bib[key = i]); cat("\n")
  }
  
}

```

```{r}
#| label: print-refs
#| results: 'asis'
# Filter citekey dataframe, convert to vector and use to subset bib
filter(cite_key_list, type == "Article") |> 
  arrange(desc(year)) |> 
  pull(citekey) |> 
  ref_printer()
```
